# 1 "main.c"
# 1 "<built-in>"
# 1 "<command line>"
# 1 "main.c"



# 1 "mygbalib.h" 1
# 1 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 1 3 4
# 10 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 3 4
# 1 "/usr/local/arm-thumb-elf/sys-include/_ansi.h" 1 3 4
# 15 "/usr/local/arm-thumb-elf/sys-include/_ansi.h" 3 4
# 1 "/usr/local/arm-thumb-elf/sys-include/newlib.h" 1 3 4
# 16 "/usr/local/arm-thumb-elf/sys-include/_ansi.h" 2 3 4
# 1 "/usr/local/arm-thumb-elf/sys-include/sys/config.h" 1 3 4



# 1 "/usr/local/arm-thumb-elf/sys-include/machine/ieeefp.h" 1 3 4
# 5 "/usr/local/arm-thumb-elf/sys-include/sys/config.h" 2 3 4
# 17 "/usr/local/arm-thumb-elf/sys-include/_ansi.h" 2 3 4
# 11 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 2 3 4



# 1 "/usr/local/lib/gcc-lib/arm-thumb-elf/3.3.6/include/stddef.h" 1 3 4
# 213 "/usr/local/lib/gcc-lib/arm-thumb-elf/3.3.6/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 325 "/usr/local/lib/gcc-lib/arm-thumb-elf/3.3.6/include/stddef.h" 3 4
typedef int wchar_t;
# 15 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 2 3 4

# 1 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 1 3 4
# 14 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 3 4
# 1 "/usr/local/arm-thumb-elf/sys-include/sys/_types.h" 1 3 4
# 12 "/usr/local/arm-thumb-elf/sys-include/sys/_types.h" 3 4
typedef long _off_t;
__extension__ typedef long long _off64_t;


typedef int _ssize_t;





# 1 "/usr/local/lib/gcc-lib/arm-thumb-elf/3.3.6/include/stddef.h" 1 3 4
# 354 "/usr/local/lib/gcc-lib/arm-thumb-elf/3.3.6/include/stddef.h" 3 4
typedef unsigned int wint_t;
# 23 "/usr/local/arm-thumb-elf/sys-include/sys/_types.h" 2 3 4


typedef struct
{
  int __count;
  union
  {
    wint_t __wch;
    unsigned char __wchb[4];
  } __value;
} _mbstate_t;

typedef int _flock_t;
# 15 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 2 3 4




typedef unsigned long __ULong;
# 40 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 3 4
struct _Bigint
{
  struct _Bigint *_next;
  int _k, _maxwds, _sign, _wds;
  __ULong _x[1];
};


struct __tm
{
  int __tm_sec;
  int __tm_min;
  int __tm_hour;
  int __tm_mday;
  int __tm_mon;
  int __tm_year;
  int __tm_wday;
  int __tm_yday;
  int __tm_isdst;
};
# 68 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 3 4
struct _atexit {
        struct _atexit *_next;
        int _ind;
        void (*_fns[32])(void);
        void *_fnargs[32];
        __ULong _fntypes;
};
# 91 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 3 4
struct __sbuf {
        unsigned char *_base;
        int _size;
};






typedef long _fpos_t;
# 156 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 3 4
struct __sFILE {
  unsigned char *_p;
  int _r;
  int _w;
  short _flags;
  short _file;
  struct __sbuf _bf;
  int _lbfsize;






  void * _cookie;

  int (*_read) (void * _cookie, char *_buf, int _n);
  int (*_write) (void * _cookie, const char *_buf, int _n);

  _fpos_t (*_seek) (void * _cookie, _fpos_t _offset, int _whence);
  int (*_close) (void * _cookie);


  struct __sbuf _ub;
  unsigned char *_up;
  int _ur;


  unsigned char _ubuf[3];
  unsigned char _nbuf[1];


  struct __sbuf _lb;


  int _blksize;
  int _offset;


  struct _reent *_data;



  _flock_t _lock;

};
# 249 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 3 4
typedef struct __sFILE __FILE;


struct _glue
{
  struct _glue *_next;
  int _niobs;
  __FILE *_iobs;
};
# 280 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 3 4
struct _rand48 {
  unsigned short _seed[3];
  unsigned short _mult[3];
  unsigned short _add;




};
# 532 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 3 4
struct _reent
{
  int _errno;




  __FILE *_stdin, *_stdout, *_stderr;

  int _inc;
  char _emergency[25];

  int _current_category;
  const char *_current_locale;

  int __sdidinit;

  void (*__cleanup) (struct _reent *);


  struct _Bigint *_result;
  int _result_k;
  struct _Bigint *_p5s;
  struct _Bigint **_freelist;


  int _cvtlen;
  char *_cvtbuf;

  union
    {
      struct
        {
          unsigned int _unused_rand;
          char * _strtok_last;
          char _asctime_buf[26];
          struct __tm _localtime_buf;
          int _gamma_signgam;
          __extension__ unsigned long long _rand_next;
          struct _rand48 _r48;
          _mbstate_t _mblen_state;
          _mbstate_t _mbtowc_state;
          _mbstate_t _wctomb_state;
          char _l64a_buf[8];
          char _signal_buf[24];
          int _getdate_err;
          _mbstate_t _mbrlen_state;
          _mbstate_t _mbrtowc_state;
          _mbstate_t _mbsrtowcs_state;
          _mbstate_t _wcrtomb_state;
          _mbstate_t _wcsrtombs_state;
        } _reent;



      struct
        {

          unsigned char * _nextf[30];
          unsigned int _nmalloc[30];
        } _unused;
    } _new;


  struct _atexit *_atexit;
  struct _atexit _atexit0;


  void (**(_sig_func))(int);




  struct _glue __sglue;
  __FILE __sf[3];
};
# 728 "/usr/local/arm-thumb-elf/sys-include/sys/reent.h" 3 4
extern struct _reent *_impure_ptr ;

void _reclaim_reent (struct _reent *);
# 17 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 2 3 4
# 1 "/usr/local/arm-thumb-elf/sys-include/machine/stdlib.h" 1 3 4
# 18 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 2 3 4

# 1 "/usr/local/arm-thumb-elf/sys-include/alloca.h" 1 3 4
# 20 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 2 3 4




typedef struct
{
  int quot;
  int rem;
} div_t;

typedef struct
{
  long quot;
  long rem;
} ldiv_t;
# 45 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 3 4
extern int __mb_cur_max;



void abort (void) __attribute__ ((noreturn));
int abs (int);
int atexit (void (*__func)(void));
double atof (const char *__nptr);

float atoff (const char *__nptr);

int atoi (const char *__nptr);
long atol (const char *__nptr);
void * bsearch (const void * __key, const void * __base, size_t __nmemb, size_t __size, int (* _compar) (const void *, const void *));




void * calloc (size_t __nmemb, size_t __size);
div_t div (int __numer, int __denom);
void exit (int __status) __attribute__ ((noreturn));
void free (void *);
char * getenv (const char *__string);
char * _getenv_r (struct _reent *, const char *__string);
char * _findenv (const char *, int *);
char * _findenv_r (struct _reent *, const char *, int *);
long labs (long);
ldiv_t ldiv (long __numer, long __denom);
void * malloc (size_t __size);
int mblen (const char *, size_t);
int _mblen_r (struct _reent *, const char *, size_t, _mbstate_t *);
int mbtowc (wchar_t *, const char *, size_t);
int _mbtowc_r (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *);
int wctomb (char *, wchar_t);
int _wctomb_r (struct _reent *, char *, wchar_t, _mbstate_t *);
size_t mbstowcs (wchar_t *, const char *, size_t);
size_t _mbstowcs_r (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *);
size_t wcstombs (char *, const wchar_t *, size_t);
size_t _wcstombs_r (struct _reent *, char *, const wchar_t *, size_t, _mbstate_t *);


int mkstemp (char *);
char * mktemp (char *);


void qsort (void * __base, size_t __nmemb, size_t __size, int(*_compar)(const void *, const void *));
int rand (void);
void * realloc (void * __r, size_t __size);
void srand (unsigned __seed);
double strtod (const char *__n, char **__end_PTR);
double _strtod_r (struct _reent *,const char *__n, char **__end_PTR);
float strtof (const char *__n, char **__end_PTR);






long strtol (const char *__n, char **__end_PTR, int __base);
long _strtol_r (struct _reent *,const char *__n, char **__end_PTR, int __base);
unsigned long strtoul (const char *__n, char **__end_PTR, int __base);
unsigned long _strtoul_r (struct _reent *,const char *__n, char **__end_PTR, int __base);

int system (const char *__string);


long a64l (const char *__input);
char * l64a (long __input);
char * _l64a_r (struct _reent *,long __input);
int on_exit (void (*__func)(int, void *),void * __arg);
void _Exit (int __status) __attribute__ ((noreturn));
int putenv (const char *__string);
int _putenv_r (struct _reent *, const char *__string);
int setenv (const char *__string, const char *__value, int __overwrite);
int _setenv_r (struct _reent *, const char *__string, const char *__value, int __overwrite);

char * gcvt (double,int,char *);
char * gcvtf (float,int,char *);
char * fcvt (double,int,int *,int *);
char * fcvtf (float,int,int *,int *);
char * ecvt (double,int,int *,int *);
char * ecvtbuf (double, int, int*, int*, char *);
char * fcvtbuf (double, int, int*, int*, char *);
char * ecvtf (float,int,int *,int *);
char * dtoa (double, int, int, int *, int*, char**);
int rand_r (unsigned *__seed);

double drand48 (void);
double _drand48_r (struct _reent *);
double erand48 (unsigned short [3]);
double _erand48_r (struct _reent *, unsigned short [3]);
long jrand48 (unsigned short [3]);
long _jrand48_r (struct _reent *, unsigned short [3]);
void lcong48 (unsigned short [7]);
void _lcong48_r (struct _reent *, unsigned short [7]);
long lrand48 (void);
long _lrand48_r (struct _reent *);
long mrand48 (void);
long _mrand48_r (struct _reent *);
long nrand48 (unsigned short [3]);
long _nrand48_r (struct _reent *, unsigned short [3]);
unsigned short *
       seed48 (unsigned short [3]);
unsigned short *
       _seed48_r (struct _reent *, unsigned short [3]);
void srand48 (long);
void _srand48_r (struct _reent *, long);
long long strtoll (const char *__n, char **__end_PTR, int __base);
long long _strtoll_r (struct _reent *, const char *__n, char **__end_PTR, int __base);
unsigned long long strtoull (const char *__n, char **__end_PTR, int __base);
unsigned long long _strtoull_r (struct _reent *, const char *__n, char **__end_PTR, int __base);


void cfree (void *);
# 172 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 3 4
char * _dtoa_r (struct _reent *, double, int, int, int *, int*, char**);

void * _malloc_r (struct _reent *, size_t);
void * _calloc_r (struct _reent *, size_t, size_t);
void _free_r (struct _reent *, void *);
void * _realloc_r (struct _reent *, void *, size_t);
void _mstats_r (struct _reent *, char *);

int _system_r (struct _reent *, const char *);

void __eprintf (const char *, const char *, unsigned int, const char *);
# 213 "/usr/local/arm-thumb-elf/sys-include/stdlib.h" 3 4

# 2 "mygbalib.h" 2
# 1 "/usr/local/lib/gcc-lib/arm-thumb-elf/3.3.6/include/stdbool.h" 1 3 4
# 3 "mygbalib.h" 2
# 1 "sprites.h" 1
# 1 "gba.h" 1







typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;

typedef signed char s8;
typedef signed short s16;
typedef signed int s32;

typedef unsigned char byte;
typedef unsigned short hword;
typedef unsigned int word;
# 211 "gba.h"
enum
{
    VBLANK_HANDLER,
    HBLANK_HANDLER,
    VCOUNT_HANDLER,
    TIMER0_HANDLER,
    TIMER1_HANDLER,
    TIMER2_HANDLER,
    TIMER3_HANDLER,
    SERIAL_COM_HANDLER,
    DMA0_HANDLER,
    DMA1_HANDLER,
    DMA2_HANDLER,
    DMA3_HANDLER,
    KEYS_HANDLER,
    CART_HANDLER,
    MAX_INTERRUPT_HANDLERS,
};
# 267 "gba.h"
typedef void (*fp)(void);
# 2 "sprites.h" 2




int sprites_palette[256] = {
        0x0000,0x67ff,0x4fff,0x33ff,0x1bff,0x03ff,0x7f3f,0x673f,0x4f3f,0x333f,0x1b3f,0x033f,0x7e7f,0x667f,0x4e7f,0x327f,
        0x1a7f,0x027f,0x7d9f,0x659f,0x4d9f,0x319f,0x199f,0x019f,0x7cdf,0x64df,0x4cdf,0x30df,0x18df,0x00df,0x7c1f,0x641f,
        0x4c1f,0x301f,0x181f,0x001f,0x7ff9,0x67f9,0x4ff9,0x33f9,0x1bf9,0x03f9,0x7f39,0x6739,0x4f39,0x3339,0x1b39,0x0339,
        0x7e79,0x6679,0x4e79,0x3279,0x1a79,0x0279,0x7d99,0x6599,0x4d99,0x3199,0x1999,0x0199,0x7cd9,0x64d9,0x4cd9,0x30d9,
        0x18d9,0x00d9,0x7c19,0x6419,0x4c19,0x3019,0x1819,0x0019,0x7ff3,0x67f3,0x4ff3,0x33f3,0x1bf3,0x03f3,0x7f33,0x6733,
        0x4f33,0x3333,0x1b33,0x0333,0x7e73,0x6673,0x4e73,0x3273,0x1a73,0x0273,0x7d93,0x6593,0x4d93,0x3193,0x1993,0x0193,
        0x7cd3,0x64d3,0x4cd3,0x30d3,0x18d3,0x00d3,0x7c13,0x6413,0x4c13,0x3013,0x1813,0x0013,0x7fec,0x67ec,0x4fec,0x33ec,
        0x1bec,0x03ec,0x7f2c,0x672c,0x4f2c,0x332c,0x1b2c,0x032c,0x7e6c,0x666c,0x4e6c,0x326c,0x1a6c,0x026c,0x7d8c,0x658c,
        0x4d8c,0x318c,0x198c,0x018c,0x7ccc,0x64cc,0x4ccc,0x30cc,0x18cc,0x00cc,0x7c0c,0x640c,0x4c0c,0x300c,0x180c,0x000c,
        0x7fe6,0x67e6,0x4fe6,0x33e6,0x1be6,0x03e6,0x7f26,0x6726,0x4f26,0x3326,0x1b26,0x0326,0x7e66,0x6666,0x4e66,0x3266,
        0x1a66,0x0266,0x7d86,0x6586,0x4d86,0x3186,0x1986,0x0186,0x7cc6,0x64c6,0x4cc6,0x30c6,0x18c6,0x00c6,0x7c06,0x6406,
        0x4c06,0x3006,0x1806,0x0006,0x7fe0,0x67e0,0x4fe0,0x33e0,0x1be0,0x03e0,0x7f20,0x6720,0x4f20,0x3320,0x1b20,0x0320,
        0x7e60,0x6660,0x4e60,0x3260,0x1a60,0x0260,0x7d80,0x6580,0x4d80,0x3180,0x1980,0x0180,0x7cc0,0x64c0,0x4cc0,0x30c0,
        0x18c0,0x00c0,0x7c00,0x6400,0x4c00,0x3000,0x1800,0x0000,0x7fff,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
        0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
        0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x7fff
};




u16 sprites[] = {

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B, 0x6B,

  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x50,
  0x6B, 0x6B, 0x00, 0x00, 0x00, 0x50, 0x24, 0x50,
  0x6B, 0x6B, 0x6B, 0x00, 0x50, 0x24, 0x50, 0x00,
  0x6B, 0xD1, 0x00, 0x50, 0x24, 0x50, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1,
  0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x6B, 0x00, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,

  0xD1, 0x5E, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00,
  0xD1, 0x5E, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,
  0x5E, 0x5E, 0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00,
  0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,

  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x50, 0x50,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x50, 0x24, 0x50,
  0x6B, 0xD1, 0x00, 0x00, 0x50, 0x24, 0x50, 0x00,

  0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,

  0xD1, 0xD1, 0x00, 0x50, 0x24, 0x50, 0x00, 0x00,
  0xD1, 0x5E, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00,
  0xD1, 0x5E, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,
  0x5E, 0x5E, 0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00,
  0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,

  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x50,
  0x6B, 0x6B, 0x00, 0x00, 0x00, 0x50, 0x24, 0x50,
  0x6B, 0x6B, 0x6B, 0x00, 0x50, 0x24, 0x50, 0x00,
  0x6B, 0xD1, 0x00, 0x50, 0x24, 0x50, 0x00, 0x00,

  0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x6B, 0x6B, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x00, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00,

  0xD1, 0x5E, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00,
  0xD1, 0x5E, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,
  0x5E, 0x5E, 0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00,
  0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B,
  0x6B, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,

  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x50, 0x50,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x50, 0x24, 0x50,
  0x6B, 0xD1, 0x00, 0x00, 0x50, 0x24, 0x50, 0x00,

  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00, 0x00,
  0x00, 0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,

  0xD1, 0xD1, 0x00, 0x50, 0x24, 0x50, 0x00, 0x00,
  0xD1, 0x5E, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00,
  0xD1, 0x5E, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,
  0x5E, 0x5E, 0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00,
  0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06,
  0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x6B, 0x6B,
  0x00, 0x50, 0x24, 0x50, 0x00, 0x6B, 0x6B, 0x6B,
  0x00, 0x00, 0x50, 0x24, 0x50, 0x00, 0xD1, 0x6B,

  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x50, 0x24, 0x50, 0x5E, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x50, 0x24, 0x5E, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E, 0x5E, 0x5E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,

  0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x00, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x00, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x00, 0x6B, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B,
  0x50, 0x24, 0x50, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x00, 0x50, 0x24, 0x50, 0x00, 0x00, 0xD1, 0x6B,

  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x50, 0x24, 0x50, 0x00, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x50, 0x24, 0x50, 0x5E, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x50, 0x24, 0x5E, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E, 0x5E, 0x5E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,

  0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x00, 0x00,
  0xD1, 0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x00, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06,
  0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x6B, 0x6B,
  0x00, 0x50, 0x24, 0x50, 0x00, 0x6B, 0x6B, 0x6B,
  0x00, 0x00, 0x50, 0x24, 0x50, 0x00, 0xD1, 0x6B,

  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x50, 0x24, 0x50, 0x5E, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x50, 0x24, 0x5E, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E, 0x5E, 0x5E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55,

  0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x6B, 0x6B,
  0x00, 0x55, 0x55, 0x00, 0x6B, 0x6B, 0x00, 0x00,
  0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B,
  0x50, 0x24, 0x50, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x00, 0x50, 0x24, 0x50, 0x00, 0x00, 0xD1, 0x6B,

  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6B,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,

  0x00, 0x00, 0x50, 0x24, 0x50, 0x00, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x50, 0x24, 0x50, 0x5E, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x50, 0x24, 0x5E, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E, 0x5E, 0x5E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,

  0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,
  0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,
  0xD1, 0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,

  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8,
  0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,

  0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x6B, 0x6B, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x00, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,

  0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0x5E, 0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0x5E, 0x5E, 0x25, 0x50, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0x5E, 0x50, 0x25, 0x50, 0x50, 0x00,
  0xD1, 0xD1, 0x00, 0x00, 0x50, 0xD8, 0x25, 0x50,
  0x00, 0x55, 0x55, 0x00, 0x00, 0xD8, 0x50, 0x50,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0xD8, 0xD8,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B,
  0x6B, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,

  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x02, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00,
  0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50,
  0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x50, 0x24,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x50, 0x24, 0x50,
  0x6B, 0xD1, 0x00, 0x5E, 0x50, 0x24, 0x50, 0x00,

  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,

  0xD1, 0xD1, 0x00, 0x5E, 0x24, 0x50, 0x00, 0x00,
  0xD1, 0xD1, 0x5E, 0x5E, 0x5E, 0x5E, 0x00, 0x00,
  0xD1, 0xD1, 0x5E, 0x5E, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
  0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0x01,
  0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x01, 0x01,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x01, 0x01, 0x00,
  0x50, 0x50, 0xD8, 0xD8, 0xD8, 0x01, 0x01, 0x00,
  0x50, 0x50, 0xD8, 0x01, 0x01, 0x01, 0x00, 0x00,
  0xD8, 0xD8, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,

  0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xD8, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00,
  0x00, 0x00, 0x01, 0x01, 0x01, 0xD8, 0xD8, 0xD8,
  0x50, 0x50, 0x00, 0x01, 0x01, 0x01, 0xD8, 0xD8,
  0x24, 0x50, 0x00, 0x00, 0x00, 0x01, 0x01, 0xD8,
  0x50, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x00,

  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0xD8,
  0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x01, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x01, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0xD8, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06,
  0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0x6B,

  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E, 0x5E, 0xD1,
  0x00, 0x00, 0x00, 0x50, 0x25, 0x5E, 0x5E, 0xD1,
  0x00, 0x50, 0x50, 0x25, 0x50, 0x5E, 0xD1, 0xD1,
  0x50, 0x25, 0xD8, 0x50, 0x00, 0x00, 0xD1, 0xD1,
  0x50, 0x50, 0xD8, 0x00, 0x00, 0x55, 0x55, 0x00,
  0xD8, 0xD8, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,

  0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x6B, 0x6B,
  0x00, 0x55, 0x55, 0x00, 0x6B, 0x6B, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x02,
  0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06,
  0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x24, 0x50, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B,
  0x50, 0x24, 0x50, 0x00, 0x00, 0x6B, 0x6B, 0x6B,
  0x00, 0x50, 0x24, 0x50, 0x5E, 0x00, 0xD1, 0x6B,

  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6B, 0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6B,
  0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,

  0x00, 0x00, 0x50, 0x24, 0x5E, 0x00, 0xD1, 0xD1,
  0x00, 0x00, 0x5E, 0x5E, 0x5E, 0x5E, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x5E, 0x5E, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00,

  0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,
  0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,
  0xD1, 0xD1, 0xD1, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,
  0xD1, 0xD1, 0xD1, 0x00, 0x6B, 0x6B, 0x6B, 0x00,
  0xD1, 0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8,
  0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x00, 0xD8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00,
  0x00, 0x01, 0x01, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x01, 0x01, 0xD8, 0xD8, 0xD8, 0x50, 0x50,
  0x00, 0x00, 0x01, 0x01, 0x01, 0xD8, 0x50, 0x50,
  0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0xD8, 0xD8,


  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8,
  0x00, 0x01, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0x01,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00,
  0xD8, 0xD8, 0xD8, 0x01, 0x01, 0x01, 0x00, 0x00,
  0xD8, 0xD8, 0x01, 0x01, 0x01, 0x00, 0x50, 0x50,
  0xD8, 0x01, 0x01, 0x00, 0x00, 0x00, 0x50, 0x24,
  0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x50,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0xD8, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0xD8,
  0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4E,
  0x00, 0x00, 0x00, 0x00, 0x4E, 0x4E, 0x4E, 0x24,
  0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x4E, 0x24, 0x4F, 0x24, 0x24,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00, 0x00,
  0x4F, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x4E, 0x24, 0x4F, 0x4F, 0x4F,
  0x00, 0x00, 0x4E, 0x24, 0x24, 0x24, 0x4F, 0x4F,
  0x00, 0x00, 0x4E, 0x24, 0x24, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x4E, 0x4E, 0x4E, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0x4E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00, 0x00,
  0x4F, 0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00,
  0x4E, 0x4E, 0x4E, 0x24, 0x24, 0x4E, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x4E, 0x4E, 0x4E, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x4F,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x4E, 0x4E, 0x4E, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x4F, 0x24, 0x4E, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24, 0x4F,
  0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x00, 0x4E, 0x24, 0x24, 0x24, 0x24,
  0x00, 0x00, 0x4E, 0x24, 0x24, 0x4E, 0x4E, 0x4E,
  0x00, 0x00, 0x4E, 0x4E, 0x4E, 0x00, 0x00, 0x00,

  0x24, 0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00,
  0x24, 0x24, 0x24, 0x24, 0x4E, 0x00, 0x00, 0x00,
  0x4F, 0x4F, 0x4F, 0x24, 0x4E, 0x00, 0x00, 0x00,
  0x4F, 0x4F, 0x24, 0x24, 0x24, 0x4E, 0x00, 0x00,
  0x24, 0x24, 0x24, 0x24, 0x24, 0x4E, 0x00, 0x00,
  0x24, 0x24, 0x4E, 0x4E, 0x4E, 0x00, 0x00, 0x00,
  0x4E, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99, 0x99,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x99, 0x99,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0x99, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0xD8,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0x99,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,

  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0xD8, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x99,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0xD8, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x99, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0xD8, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0x99, 0x99, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99, 0x99,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0x00, 0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00,
  0xD8, 0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00,
  0x99, 0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x99,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x23,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x23, 0x23,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x23,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x23, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x23, 0x23, 0x00, 0x00, 0x00, 0x11, 0x00,
  0x23, 0x23, 0x23, 0x23, 0x00, 0x23, 0x00, 0x00,
  0x11, 0x23, 0x23, 0x23, 0x23, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x23, 0x23, 0x00, 0x23, 0x23, 0x23,
  0x00, 0x23, 0x00, 0x23, 0x23, 0x23, 0x23, 0x11,
  0x00, 0x00, 0x00, 0x23, 0x23, 0x23, 0x23, 0x11,
  0x00, 0x23, 0x23, 0x23, 0x23, 0x23, 0x11, 0x11,
  0x00, 0x00, 0x23, 0x23, 0x11, 0x11, 0x11, 0xD8,
  0x00, 0x00, 0x23, 0x23, 0x11, 0x11, 0xD8, 0xD8,
  0x00, 0x00, 0x00, 0x23, 0x23, 0x11, 0x11, 0x11,
  0x00, 0x00, 0x00, 0x00, 0x23, 0x23, 0x23, 0x23,

  0x23, 0x23, 0x11, 0x23, 0x23, 0x23, 0x00, 0x00,
  0x23, 0x23, 0x11, 0x23, 0x23, 0x23, 0x00, 0x00,
  0x11, 0x11, 0x11, 0x11, 0x23, 0x23, 0x23, 0x00,
  0xD8, 0x11, 0xD8, 0x11, 0x23, 0x23, 0x23, 0x00,
  0xD8, 0xD8, 0x11, 0x11, 0x23, 0x23, 0x00, 0x00,
  0xD8, 0x11, 0x11, 0x23, 0x23, 0x00, 0x00, 0x00,
  0x11, 0x11, 0x23, 0x23, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x23, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00,
  0x00, 0x11, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x23, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x23, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x23, 0x23, 0x11, 0x00, 0x00, 0x00, 0x00, 0x23,

  0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x23, 0x23,
  0x00, 0x00, 0x00, 0x23, 0x23, 0x23, 0x23, 0x11,
  0x23, 0x00, 0x00, 0x00, 0x23, 0x11, 0x11, 0xD8,
  0x00, 0x23, 0x00, 0x23, 0x23, 0x11, 0xD8, 0xD8,
  0x00, 0x00, 0x23, 0x23, 0x11, 0x11, 0xD8, 0xD8,
  0x00, 0x00, 0x23, 0x23, 0x23, 0x23, 0x11, 0x11,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x23, 0x23,

  0x23, 0x23, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x11, 0x23, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x11, 0x11, 0x23, 0x23, 0x00, 0x00, 0x00, 0x23,
  0x11, 0x11, 0x11, 0x11, 0x23, 0x00, 0x00, 0x00,
  0xD8, 0x11, 0x11, 0x11, 0x11, 0x23, 0x00, 0x00,
  0xD8, 0xD8, 0x11, 0x11, 0x23, 0x23, 0x00, 0x00,
  0x11, 0x11, 0x11, 0x23, 0x23, 0x23, 0x00, 0x00,
  0x23, 0x23, 0x23, 0x23, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x23, 0x23, 0x23, 0x00, 0x00,
  0x00, 0x00, 0x23, 0xD8, 0xD8, 0x23, 0x23, 0x00,
  0x00, 0x23, 0xD8, 0xD8, 0x23, 0x23, 0x23, 0x23,
  0x00, 0x23, 0xD8, 0x23, 0x23, 0x23, 0x23, 0x23,
  0x00, 0x00, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23,
  0x00, 0x00, 0x00, 0x23, 0x23, 0x23, 0x23, 0x23,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x23, 0x23, 0x23, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x23, 0x23, 0x23, 0x23, 0x00, 0x00, 0x00,
  0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x00, 0x00,
  0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x00, 0x00,
  0x23, 0x23, 0x23, 0x23, 0x23, 0x00, 0x00, 0x00,
  0x23, 0x23, 0x23, 0x23, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x23, 0x23, 0x23, 0x23,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x23, 0x23,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x23,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x23, 0x23, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x06, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0xD1, 0xD1,

  0x00, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x5E, 0x24, 0x5E, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0x00, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1,
  0x00, 0x6B, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x00, 0xD1, 0xD1, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00,

  0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x50, 0x24, 0x50, 0x00, 0xD8, 0x00, 0x00,
  0x00, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x50, 0x24, 0x50, 0x00, 0x00, 0xD8, 0x00,
  0x00, 0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x06, 0x06, 0x02, 0x02, 0x00, 0x00, 0x00,
  0x6B, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0xD1,
  0x00, 0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B, 0xD1,
  0x00, 0x00, 0x00, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1,
  0x00, 0x00, 0x6B, 0x6B, 0x6B, 0xD1, 0xD1, 0x00,
  0x00, 0x00, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1, 0x00,
  0x00, 0x6B, 0x6B, 0xD1, 0xD1, 0xD1, 0xD1, 0x00,
  0x00, 0x6B, 0x6B, 0x55, 0x00, 0x00, 0x55, 0x00,
  0x00, 0x00, 0x55, 0x55, 0x00, 0x55, 0x55, 0x00,

  0xD1, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5E, 0x24, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x50, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x02,
  0x00, 0x00, 0x00, 0xD8, 0xD8, 0xD8, 0x02, 0x05,
  0x00, 0x00, 0xD8, 0x02, 0x02, 0x02, 0x05, 0x05,
  0x00, 0x00, 0x00, 0xD8, 0x02, 0x02, 0x05, 0x05,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0x02, 0x05,

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x02, 0xD8, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x05, 0x05, 0x02, 0x02, 0x02, 0xD8, 0x00, 0x00,
  0x05, 0x05, 0x02, 0xD8, 0xD8, 0x00, 0x00, 0x00,
  0x05, 0x02, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,

  0x00, 0x00, 0x00, 0x00, 0xD8, 0x02, 0x02, 0x02,
  0x00, 0x00, 0x00, 0xD8, 0x02, 0x02, 0x02, 0xD8,
  0x00, 0x00, 0x00, 0xD8, 0x02, 0x02, 0xD8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  0x02, 0x02, 0x02, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0xD8, 0x02, 0x02, 0x02, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0xD8, 0x02, 0x02, 0xD8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xD8, 0xD8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
# 4 "mygbalib.h" 2
# 1 "worldmap.h" 1

# 1 "tiles.h" 1




const u16 tiles_palette[ 256 ] = {
        0x0000,0x67ff,0x4fff,0x33ff,0x1bff,0x03ff,0x7f3f,0x673f,0x4f3f,0x333f,0x1b3f,0x033f,0x7e7f,0x667f,0x4e7f,0x327f,
        0x1a7f,0x027f,0x7d9f,0x659f,0x4d9f,0x319f,0x199f,0x019f,0x7cdf,0x64df,0x4cdf,0x30df,0x18df,0x00df,0x7c1f,0x641f,
        0x4c1f,0x301f,0x181f,0x001f,0x7ff9,0x67f9,0x4ff9,0x33f9,0x1bf9,0x03f9,0x7f39,0x6739,0x4f39,0x3339,0x1b39,0x0339,
        0x7e79,0x6679,0x4e79,0x3279,0x1a79,0x0279,0x7d99,0x6599,0x4d99,0x3199,0x1999,0x0199,0x7cd9,0x64d9,0x4cd9,0x30d9,
        0x18d9,0x00d9,0x7c19,0x6419,0x4c19,0x3019,0x1819,0x0019,0x7ff3,0x67f3,0x4ff3,0x33f3,0x1bf3,0x03f3,0x7f33,0x6733,
        0x4f33,0x3333,0x1b33,0x0333,0x7e73,0x6673,0x4e73,0x3273,0x1a73,0x0273,0x7d93,0x6593,0x4d93,0x3193,0x1993,0x0193,
        0x7cd3,0x64d3,0x4cd3,0x30d3,0x18d3,0x00d3,0x7c13,0x6413,0x4c13,0x3013,0x1813,0x0013,0x7fec,0x67ec,0x4fec,0x33ec,
        0x1bec,0x03ec,0x7f2c,0x672c,0x4f2c,0x332c,0x1b2c,0x032c,0x7e6c,0x666c,0x4e6c,0x326c,0x1a6c,0x026c,0x7d8c,0x658c,
        0x4d8c,0x318c,0x198c,0x018c,0x7ccc,0x64cc,0x4ccc,0x30cc,0x18cc,0x00cc,0x7c0c,0x640c,0x4c0c,0x300c,0x180c,0x000c,
        0x7fe6,0x67e6,0x4fe6,0x33e6,0x1be6,0x03e6,0x7f26,0x6726,0x4f26,0x3326,0x1b26,0x0326,0x7e66,0x6666,0x4e66,0x3266,
        0x1a66,0x0266,0x7d86,0x6586,0x4d86,0x3186,0x1986,0x0186,0x7cc6,0x64c6,0x4cc6,0x30c6,0x18c6,0x00c6,0x7c06,0x6406,
        0x4c06,0x3006,0x1806,0x0006,0x7fe0,0x67e0,0x4fe0,0x33e0,0x1be0,0x03e0,0x7f20,0x6720,0x4f20,0x3320,0x1b20,0x0320,
        0x7e60,0x6660,0x4e60,0x3260,0x1a60,0x0260,0x7d80,0x6580,0x4d80,0x3180,0x1980,0x0180,0x7cc0,0x64c0,0x4cc0,0x30c0,
        0x18c0,0x00c0,0x7c00,0x6400,0x4c00,0x3000,0x1800,0x0000,0x7fff,0x294a,0x3def,0x6b5a,0x18c6,0x0000,0x00cc,0x11b1,
        0x1e15,0x0d72,0x08a8,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
        0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x7fff
};






const u16 tiles_data[ 4*8*10 ] = {

        0x3333,0x3333,0x3333,0x3333,
        0x3333,0x3333,0x3333,0x3333,
        0x3333,0x3333,0x3333,0x3333,
        0x3333,0x3333,0x3333,0x3333,
        0x3333,0x3333,0x3333,0x3333,
        0x3333,0x3333,0x3333,0x3333,
        0x3333,0x3333,0x3333,0x3333,
        0x3333,0x3333,0x3333,0x3333,

        0x2323,0x1d1d,0x171d,0x1d1d,
        0x231d,0x231d,0x231d,0x1d23,
        0x1723,0x1d17,0x231d,0x1d1d,
        0x231d,0x1723,0x1717,0x2323,
        0x1d17,0x171d,0x231d,0x2317,
        0x2323,0x1d1d,0x1d17,0x1d1d,
        0x171d,0x2323,0x2323,0x1d1d,
        0x1d23,0x1d1d,0x1717,0x1d1d,

        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xd8c0,0xc0d8,0xc0c0,
        0xc0c0,0xd8d8,0xd8d8,0xc0d8,
        0x2bc0,0xd8d8,0xd8d8,0x2b2b,
        0xc0c0,0x2b2b,0x2b2b,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,

        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,
        0xc0c0,0xc0c0,0xc0c0,0xc0c0,

        0x6464,0x8864,0x6488,0x6464,
        0x8864,0x8864,0x6464,0x6488,
        0x6464,0x6488,0x6464,0x6488,
        0x8864,0x6488,0x8864,0x6464,
        0x8864,0x6464,0x8888,0x6464,
        0x6464,0x6464,0x6488,0x8864,
        0x8864,0x8864,0x6464,0x6488,
        0x6464,0x6464,0x8864,0x6488,

        0x2b81,0x81ac,0x8181,0xd881,
        0x8181,0xacd8,0x8181,0x8181,
        0x812b,0x2b81,0x81ac,0x8181,
        0xac2b,0x8181,0xacd8,0xacac,
        0x2b81,0x81ac,0x81ac,0x812b,
        0xac81,0xac81,0x8181,0x2bac,
        0xacac,0x8181,0x2bac,0x8181,
        0x8181,0x8181,0x81ac,0xac81,

        0x9a9a,0x9a4c,0x4cb8,0xb84c,
        0x9ab8,0x9a9a,0x9a9a,0xb89a,
        0x4c9a,0x4c9a,0x5e9a,0x9a9a,
        0xdf9a,0x4cdf,0x7c5e,0x5e76,
        0x5edf,0xdfdf,0xdfdf,0xdf9a,
        0xdfdf,0xdfdf,0xdf5e,0xdfdf,
        0x5edf,0x5edf,0xdfdf,0xdfdf,
        0xdfdf,0xdfdf,0xdfdf,0xdfdf,

        0xdfdf,0x5e5e,0xdfdf,0xdf5e,
        0xdfdf,0x5edf,0xdfdf,0xdfdf,
        0xdfdf,0xdfdf,0xdfdf,0x5edf,
        0x5edf,0xdfdf,0xdf5e,0xdfdf,
        0xdfdf,0xdfdf,0x5edf,0x5edf,
        0xdfdf,0x5edf,0xdfdf,0xdfdf,
        0x5edf,0x5edf,0xdfdf,0x5e5e,
        0xdfdf,0xdfdf,0xdf5e,0xdf5e
};
# 3 "worldmap.h" 2
# 12 "worldmap.h"
const u16 lvl1_map[(64*64)] =
{
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
3, 3, 3, 3, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
6, 6, 6, 6, 7, 7, 7, 7, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6,
7, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 3, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 7, 7, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7,
4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4
};

const u16 lvl2_map[(64*64)] =
{
1, 4, 4, 4, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 1, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 1, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 5, 5, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 5, 5, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 1, 1, 4, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 5, 5, 4, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 1, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 5, 5, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 1, 1, 1, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 1, 1, 5, 5, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
5, 1, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4,
5, 1, 1, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 1, 1,
1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 1, 1, 5, 5, 5, 4, 4, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 0, 0, 1, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 5, 5, 5, 5,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 1, 1, 1, 1, 5, 5, 5, 5, 1,
1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 1, 1, 1, 5, 5, 5, 5, 4, 4,
1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 5, 5, 5, 5, 5, 4, 4,
1, 1, 1, 1, 5, 5, 5, 5, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 1, 1, 5, 5, 5, 5, 5, 5, 4, 4, 4,
1, 1, 1, 5, 5, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 4, 4, 4, 4,
1, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 4, 4, 4, 4, 4, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 1, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 1, 1, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 4, 4, 4, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 1, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 5, 5, 5, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1,
1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 4, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4,
1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
1, 1, 1, 5, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
1, 1, 1, 1, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 4,
1, 1, 1, 1, 5, 5, 4, 4, 0, 0, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4,
1, 1, 1, 1, 5, 5, 5, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 5, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 5, 4, 4, 4, 4, 0, 0, 0, 0, 4,
1, 1, 1, 1, 1, 5, 5, 4, 4, 1, 1, 1, 1, 1, 5, 5, 5, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 5, 5, 5, 4, 4, 4, 0, 0, 0, 0, 4,
1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 0, 0, 0, 0, 4,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 0, 0, 0, 0, 4,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 4, 0, 0, 0, 0, 4,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 0, 0, 0, 0, 0, 4,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 4,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 4,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 5, 5, 1, 1, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 4, 4, 4, 4, 5, 5, 1, 1, 5, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0, 4,
5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 4, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 4, 0, 0, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 4, 4, 4, 0, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 4, 4, 4, 0, 0, 0, 0, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4
};
# 5 "mygbalib.h" 2
# 20 "mygbalib.h"
u8 game_state = 0;
# 35 "mygbalib.h"
u16 *map_ptr;
# 44 "mygbalib.h"
u8 player_hp = 5;
u8 *player_hp_ptr = &player_hp;
extern void damagePlayer(u8 *player_hp_ptr);




float enemy1_x;
float enemy1_y;
float enemy1_x_ms;
u8 enemy1_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;
u8 enemy1_hp = 2;


float enemy2_x;
float enemy2_y;
float enemy2_x_ms;
u8 enemy2_hp = 2;
u8 enemy2_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;


float enemy3_x;
float enemy3_y;
float enemy3_x_ms;
u8 enemy3_hp = 2;
u8 enemy3_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;


float enemy4_x;
float enemy4_y;
float enemy4_x_ms;
u8 enemy4_hp = 2;
u8 enemy4_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;



float relic_x;
float relic_y;
# 94 "mygbalib.h"
float map_dx, map_dy;





float y_speed = 0;



u8 attack_cd_timer = 0;
u8 attack_tick = 0;


u8 iFrameCounter = 0;
u8 onFire = 0;






u8 state = 0;
u8 pose = 0;
u8 player_direction = 1;




void drawSprite(int numb, int N, int x_coord, int y_coord)
{
    *(unsigned short *)(0x7000000 + 8*N) = y_coord | 0x2000;
    *(unsigned short *)(0x7000002 + 8*N) = x_coord | 0x4000;
    *(unsigned short *)(0x7000004 + 8*N) = numb*8;
}


void delSprite(int N)
{
    *(unsigned short *)(0x7000000 + 8*N) = 240 | 0x2000;
    *(unsigned short *)(0x7000002 + 8*N) = 160 | 0x4000;
    *(unsigned short *)(0x7000004 + 8*N) = 0;

}


void fillPalette(void)
{
    int i;
    for (i = 0; i < 256; i++)
        ((unsigned short *) 0x5000200)[i] = sprites_palette[i];
}

void fillSprites(void)
{
    int i;

    for (i = 0; i < 128*16*16; i++)
        ((unsigned short *) 0x6010000)[i] = (sprites[i*2+1] << 8) + sprites[i*2];


    for(i = 0; i < 128; i++)
        drawSprite(0, i, 240, 160);
}


void drawPressStart(void)
{
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +0,80+16*0,120);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +1,80+16*1,120);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +2,80+16*2,120);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +3,80+16*3,120);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +4,80+16*4,120);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +5,80+16*0,136);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +6,80+16*1,136);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +7,80+16*2,136);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +8,80+16*3,136);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,20 +9,80+16*4,136);
}

void delPressStart(void)
{
    delSprite(20 +0);
    delSprite(20 +1);
    delSprite(20 +2);
    delSprite(20 +3);
    delSprite(20 +4);
    delSprite(20 +5);
    delSprite(20 +6);
    delSprite(20 +7);
    delSprite(20 +8);
    delSprite(20 +9);
}

void animatePressStart(void)
{
    if (state == 0)
    {
        drawPressStart();
        state = 1;
    }
    else
    {
        delPressStart();
        state = 0;
    }
}

void drawTitle(void)
{
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +0,56+16*0,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +1,56+16*1,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +2,56+16*2,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +3,56+16*3,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +4,56+16*4,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +5,56+16*5,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +6,56+16*6,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +7,56+16*7,10);
}

void drawEnd(void)
{
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +0,64+16*0,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +1,64+16*1,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +2,64+16*2,10);
    drawSprite(0 ,30 +3,64+16*3,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +4,64+16*4,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +5,64+16*5,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +6,64+16*6,10);
}

void drawDeath(void)
{
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +0,56+16*0,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +1,56+16*1,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +2,56+16*2,10);
    drawSprite(0 ,30 +3,56+16*3,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +4,56+16*4,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +5,56+16*5,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +6,56+16*6,10);
    drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,30 +7,56+16*7,10);
}

void delGameScreen(void)
{
    delSprite(30 +0);
    delSprite(30 +1);
    delSprite(30 +2);
    delSprite(30 +3);
    delSprite(30 +4);
    delSprite(30 +5);
    delSprite(30 +6);
    delSprite(30 +7);
}

void updateHP(void)
{

    if (player_hp<5)
    {
        delSprite(15 + player_hp);
    }

}

void initHP(void)
{
    int i;
    for (i = 0; i < player_hp; i++)
    {
        drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,15 + i,0 + i * 16,0);
    }
}




void fillBGPal(void)
{
    int i;
    for (i = 0; i < 256; i++)
        ((unsigned short *) 0x5000000)[i] = tiles_palette[i];
}


void fillTileMem(void)
{
    int i;
    for (i = 0; i < 4*8*10; i++)
        ((unsigned short *) 0x6000000)[i] = tiles_data[i];

}



void fillScreenBlock(u16 *map_ptr)
{
    int i;
    for (i = 0; i < (64*64)/2; i++)
        ((unsigned short *) 0x6004000)[i] = (map_ptr[i*2+1] << 8) + map_ptr[i*2];
}



void mapUpdate(void)
{
    if (game_state == 1)
    {
        map_ptr = lvl1_map;
    }
    if (game_state == 2)
    {
        map_ptr = lvl2_map;
    }
    fillScreenBlock(map_ptr);
}

void enemyUpdate(void)
{
    if (game_state == 1)
    {
        enemy1_hp = 2;
        enemy2_hp = 2;
        enemy3_hp = 2;
        enemy4_hp = 2;
        enemy1_x_ms = 0.25;
        enemy2_x_ms = 0.25;
        enemy3_x_ms = 0.5;
        enemy4_x_ms = 0.25;

        enemy1_x = 240;
        enemy1_y = 112;

        enemy2_x = 176;
        enemy2_y = 240;

        enemy3_x = 176;
        enemy3_y = 432;

        enemy4_x = 368;
        enemy4_y = 400;

        relic_x = -16;
        relic_y = -16;

    }
    if (game_state == 2)
    {
        enemy1_hp = 2;
        enemy2_hp = 2;
        enemy3_hp = 2;
        enemy4_hp = 2;
        enemy1_x_ms = 0.5;
        enemy2_x_ms = 0.75;
        enemy3_x_ms = 0.75;
        enemy4_x_ms = 0.75;

        enemy1_x = 304;
        enemy1_y = 104;

        enemy2_x = 224;
        enemy2_y = 272;

        enemy3_x = 168;
        enemy3_y = 328;

        enemy4_x = 232;
        enemy4_y = 456;

        relic_x = 480;
        relic_y = 480;
    }
}



void checkGameState(void)
{
    u16 buttons = (0x3FF & (~*(volatile u16*)0x4000130));

    if (player_hp == 0)
    {
        game_state = 4;
    }

    if (game_state == 0 || game_state == 3 || game_state == 4)
    {
        if ((buttons & 0x008) == 0x008)
        {
            game_state = 1;
            delPressStart();
            delGameScreen();
            mapUpdate();
            enemyUpdate();
            player_hp = 5;
            initHP();
            map_dx = 0;
            map_dy = 0;
            *(u32*)0x4000028 = (int)map_dx;
            *(u32*)0x400002C = (int)map_dy;
        }
    }
    if (game_state == 1)
    {
        if (map_dy >= 400 && map_dx >= 328 && map_dx<= 512)
        {
            game_state = 2;
            mapUpdate();
            enemyUpdate();
            map_dx = 0;
            map_dy = 0;
            *(u32*)0x4000028 = (int)map_dx;
            *(u32*)0x400002C = (int)map_dy;
        }
    }
    if (game_state == 2)
    {
        if (map_dy >= 400 && map_dx >= 328 && map_dx<= 512)
        {
            game_state = 3;
        }
    }
}






_Bool canPlayerMove(u8 direction, u16 *map_ptr)
{
    _Bool bot_check, top_check, left_check, right_check;
    bot_check = map_ptr[(120 + (int)map_dx + 4)/8 + (80 + (int)map_dy + 16 )/8*64] <= 3
    && map_ptr[(120 + (int)map_dx + 11)/8 + (80 + (int)map_dy + 16)/8*64] <= 3;

    top_check = map_ptr[(120 + (int)map_dx + 4)/8 + (80 + (int)map_dy - 1)/8*64] <= 3
    && map_ptr[(120 + (int)map_dx + 11)/8 + (80 + (int)map_dy - 1)/8*64] <= 3;

    left_check = map_ptr[(120 + (int)map_dx - 1)/8 + (80 + (int)map_dy + 4)/8*64] <= 3
    && map_ptr[(120 + (int)map_dx - 1)/8 + (80 + (int)map_dy + 11)/8*64] <= 3;

    right_check = map_ptr[(120 + (int)map_dx + 16)/8 + (80 + (int)map_dy + 4)/8*64] <= 3
    && map_ptr[(120 + (int)map_dx + 16)/8 + (80 + (int)map_dy + 11)/8*64] <= 3;

    if (direction == 0)
    {
        return (left_check);
    }
    if (direction == 1)
    {
        return (right_check);
    }
    if (direction == 2)
    {
        return (top_check);
    }
    if (direction == 3)
    {
        return (bot_check);
    }

    return 0x00;
}


void move(u8 direction)
{
    switch (direction)
    {
    case 1:
        if (canPlayerMove(1,map_ptr))
        {
            map_dx += 1;
            *(u32*)0x4000028 = (int)(map_dx) *256;
            pose = 1;
            player_direction = 1;

            enemy1_x -= 1;
            enemy2_x -= 1;
            enemy3_x -= 1;
            enemy4_x -= 1;
            relic_x -= 1;
        }
        break;
    case 0:
        if (canPlayerMove(0,map_ptr))
        {
            map_dx -= 1;
            *(u32*)0x4000028 = (int)(map_dx)*256;
            pose = 1;
            player_direction = 0;

            enemy1_x += 1;
            enemy2_x += 1;
            enemy3_x += 1;
            enemy4_x += 1;
            relic_x += 1;
        }
        break;
    }
}

void jump(void)
{
    if (canPlayerMove(2,map_ptr) && !canPlayerMove(3,map_ptr))
    {
        y_speed = 1.3;
    }
}


void fallCheck(void)
{
    u16 buttons = (0x3FF & (~*(volatile u16*)0x4000130));
    _Bool ground_check;


    if (y_speed > 0 && !canPlayerMove(2,map_ptr))
    {
        y_speed = 0;
    }


    if (canPlayerMove(3,map_ptr) || y_speed > 0)
    {
        y_speed += -0.05 ;


        if (y_speed< -1.5 || (buttons & 0x080) == 0x080)
        {
            y_speed = -1.5;
        }


        ground_check = map_ptr[(120 + (int)(map_dx) + 4)/8 + (80 + (int)(map_dy - y_speed) + 16)/8*64] > 3
        && map_ptr[(120 + (int)(map_dx) + 11)/8 + (80 + (int)(map_dy - y_speed) + 16)/8*64] > 3;


        map_dy -= y_speed;
        enemy1_y += y_speed;
        enemy2_y += y_speed;
        enemy3_y += y_speed;
        enemy4_y += y_speed;
        relic_y += y_speed;
        if (ground_check)
        {
            *(u32*)0x400002C = 256 * ((int)(map_dy)/8*8);
            y_speed = 0;
        }
        else
        {
            *(u32*)0x400002C = 256 * (int)(map_dy);
        }
    }
}



void enemy1Move(u16 tick_counter)
{
    if (tick_counter%180 == 0)
    {
        enemy1_x_ms *= -1;
    }
    if (enemy1_x_ms>0)
    {
        enemy1_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;
    }
    else
    {
        enemy1_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;
    }
    enemy1_x += enemy1_x_ms;

    if (enemy1_x < 0 || enemy1_y < 0 || enemy1_x > 240 || enemy1_y > 160 || enemy1_hp == 0)
    {
        delSprite(127);
    }
    else
    {
        drawSprite(enemy1_sprite, 127, (int)enemy1_x,(int)enemy1_y);
    }
}

void enemy2Move(u16 tick_counter)
{
    if (tick_counter%180 == 0)
    {
        enemy2_x_ms *= -1;
    }
    if (enemy2_x_ms>0)
    {
        enemy2_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;
    }
    else
    {
        enemy2_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;
    }
    enemy2_x += enemy2_x_ms;
    if (enemy2_x < 0 || enemy2_y < 0 || enemy2_x > 240 || enemy2_y > 160 || enemy2_hp == 0)
    {
        delSprite(126);
    }
    else
    {
        drawSprite(enemy2_sprite, 126, (int)enemy2_x,(int)enemy2_y);
    }
}

void enemy3Move(u16 tick_counter)
{
    if (tick_counter%180 == 0)
    {
        enemy3_x_ms *= -1;
    }
    if (enemy3_x_ms>0)
    {
        enemy3_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;
    }
    else
    {
        enemy3_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;
    }
    enemy3_x += enemy3_x_ms;
    if (enemy3_x < 0 || enemy3_y < 0 || enemy3_x > 240 || enemy3_y > 160 ||enemy3_hp == 0)
    {
        delSprite(125);
    }
    else
    {
        drawSprite(enemy3_sprite, 125, (int)enemy3_x,(int)enemy3_y);
    }
}

void enemy4Move(u16 tick_counter)
{
    if (tick_counter%180 == 0)
    {
        enemy4_x_ms *= -1;
    }
    if (enemy4_x_ms>0)
    {
        enemy4_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;
    }
    else
    {
        enemy4_sprite = 0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1;
    }
    enemy4_x += enemy4_x_ms;
    if (enemy4_x < 0 || enemy4_y < 0 || enemy4_x > 240 || enemy4_y > 160 || enemy4_hp == 0)
    {
        delSprite(124);
    }
    else
    {
        drawSprite(enemy4_sprite, 124, (int)enemy4_x,(int)enemy4_y);
    }
}

void relicMove()
{
    if (relic_x < 0 || relic_y < 0 || relic_x > 240 || relic_y > 160)
    {
        delSprite(5);
    }
    else
    {
        drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1, 5, (int)relic_x,(int)relic_y);
    }
}



void cooldownCheck(void)
{
    if (attack_cd_timer != 0)
    {
        attack_cd_timer -= 1;
    }


    if (attack_tick)
    {
        pose = 2;
        attack_tick = 0;
        attack_cd_timer = 4;
    }
}

void attack(void)
{
    if (attack_cd_timer == 0 && !attack_tick)
    {
        pose = 2;
        attack_tick = 1;
    }
}


_Bool isPlayerInLava(u16 *map_ptr)
{
    _Bool left_check, right_check;

    left_check = map_ptr[(120 + (int)map_dx)/8 + (80 + (int)map_dy + 4)/8*64] == 1
    || map_ptr[(120 + (int)map_dx)/8 + (80 + (int)map_dy + 11)/8*64] == 1;

    right_check = map_ptr[(120 + (int)map_dx + 16)/8 + (80 + (int)map_dy + 4)/8*64] == 1
    || map_ptr[(120 + (int)map_dx + 16)/8 + (80 + (int)map_dy + 11)/8*64] == 1;

    return left_check || right_check;
}

void damageCheck(void)
{

    if (pose == 2 && player_direction == 1)
    {

        if (enemy1_hp>0 && (int)enemy1_x > 120 + 16/2 && (int)enemy1_x < 120 + 16*1.75 && (int)enemy1_y + 16 > 80 && (int)enemy1_y < 80 + 16)
        {
            enemy1_hp -= 1;
        }
        if (enemy2_hp>0 && (int)enemy2_x > 120 + 16/2 && (int)enemy2_x < 120 + 16*1.75 && (int)enemy2_y + 16 > 80 && (int)enemy2_y < 80 + 16)
        {
            enemy2_hp -= 1;
        }
        if (enemy3_hp>0 && (int)enemy3_x > 120 + 16/2 && (int)enemy3_x < 120 + 16*1.75 && (int)enemy3_y + 16 > 80 && (int)enemy3_y < 80 + 16)
        {
            enemy3_hp -= 1;
        }
        if (enemy4_hp>0 && (int)enemy4_x > 120 + 16/2 && (int)enemy4_x < 120 + 16*1.75 && (int)enemy4_y + 16 > 80 && (int)enemy4_y < 80 + 16)
        {
            enemy4_hp -= 1;
        }
    }

    if (pose == 2 && player_direction == 0)
    {

        if (enemy1_hp>0 && (int)enemy1_x + 16 < 120 + 16/2 && (int)enemy1_x + 16 > 120 - 16*3/4 && (int)enemy1_y + 16 > 80 && (int)enemy1_y < 80 + 16)
        {
            enemy1_hp -= 1;
        }
        if (enemy2_hp>0 && (int)enemy2_x + 16 < 120 + 16/2 && (int)enemy2_x + 16 > 120 - 16*3/4 && (int)enemy2_y + 16 > 80 && (int)enemy2_y < 80 + 16)
        {
            enemy2_hp -= 1;
        }
        if (enemy3_hp>0 && (int)enemy3_x + 16 < 120 + 16/2 && (int)enemy3_x + 16 > 120 - 16*3/4 && (int)enemy3_y + 16 > 80 && (int)enemy3_y < 80 + 16)
        {
            enemy3_hp -= 1;
        }
        if (enemy4_hp>0 && (int)enemy4_x + 16 < 120 + 16/2 && (int)enemy4_x + 16 > 120 - 16*3/4 && (int)enemy4_y + 16 > 80 && (int)enemy4_y < 80 + 16)
        {
            enemy4_hp -= 1;
        }
    }



    if (!iFrameCounter && player_hp > 0)
    {

        if (!iFrameCounter && enemy1_hp > 0 && enemy1_x + 16 - 3 > 120 && enemy1_x + 3 < 120 + 16
        && enemy1_y + 16 > 80 && enemy1_y + 3 < 80 + 16)
        {
            damagePlayer(player_hp_ptr);
            iFrameCounter = 4;
        }
        if (!iFrameCounter && enemy2_hp > 0 && enemy2_x + 16 - 3 > 120 && enemy2_x + 3 < 120 + 16
        && enemy2_y + 16 > 80 && enemy2_y + 3 < 80 + 16)
        {
            damagePlayer(player_hp_ptr);
            iFrameCounter = 4;
        }
        if (!iFrameCounter && enemy3_hp > 0 && enemy3_x + 16 - 3 > 120 && enemy3_x + 3 < 120 + 16
        && enemy3_y + 16 > 80 && enemy3_y + 3 < 80 + 16)
        {
            damagePlayer(player_hp_ptr);
            iFrameCounter = 4;
        }
        if (!iFrameCounter && enemy4_hp > 0 && enemy4_x + 16 - 3 > 120 && enemy4_x + 3 < 120 + 16
        && enemy4_y + 16 > 80 && enemy4_y + 3 < 80 + 16)
        {
            damagePlayer(player_hp_ptr);
            iFrameCounter = 4;
        }

        if (isPlayerInLava(map_ptr))
        {
            onFire = 1;
            damagePlayer(player_hp_ptr);
            iFrameCounter = 4;
        }
        else
        {
            onFire = 0;
        }
    }
}

void iFrameCountdown(void)
{
    if (iFrameCounter != 0)
    {
        iFrameCounter -= 1;
    }
}





void buttonR(void)
{
    move(1);
}

void buttonL(void)
{
    move(0);
}

void buttonU(void)
{
    jump();
}

void buttonA(void)
{
    attack();
}

void buttonB(void)
{
    jump();
}

void checkButton(void)
{
    u16 buttons = (0x3FF & (~*(volatile u16*)0x4000130));

    if ((buttons & 0x001) == 0x001)
    {
        buttonA();
    }
    if ((buttons & 0x002) == 0x002)
    {
        buttonB();
    }
    if ((buttons & 0x010) == 0x010)
    {
        buttonR();
    }
    if ((buttons & 0x020) == 0x020)
    {
        buttonL();
    }
    if ((buttons & 0x040) == 0x040)
    {
        buttonU();
    }
}


void animate(void)
{
    if (state && player_direction == 1)
    {
        switch (pose)
        {
            case 0:
                drawSprite(0 +1,1,120,80);
                delSprite(2);
                break;
            case 1:
                drawSprite(0 +1 +1 +1,1,120,80);
                delSprite(2);
                pose = 0;
                break;
            case 2:
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1,1,120,80);
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,2,120+16,80);
                pose = 0;
                break;
        }
        state = 0;
    }
    else if(!state && player_direction == 1)
    {
        switch (pose)
        {
            case 0:
                drawSprite(0 +1 +1,1,120,80);
                delSprite(2);
                break;
            case 1:
                drawSprite(0 +1 +1 +1 +1,1,120,80);
                delSprite(2);
                pose = 0;
                break;
            case 2:
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,1,120,80);
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,2,120+16,80);
                pose = 0;
                break;
        }
        state = 1;
    }

    else if (state && player_direction == 0)
    {
        switch (pose)
        {
            case 0:
                drawSprite(0 +1 +1 +1 +1 +1,1,120,80);
                delSprite(2);
                break;
            case 1:
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1,1,120,80);
                delSprite(2);
                pose = 0;
                break;
            case 2:
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,1,120,80);
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,2,120-16,80);
                pose = 0;
                break;
        }
        state = 0;
    }
    else if(!state && player_direction == 0)
    {
        switch (pose)
        {
            case 0:
                drawSprite(0 +1 +1 +1 +1 +1 +1,1,120,80);
                delSprite(2);
                break;
            case 1:
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1,1,120,80);
                delSprite(2);
                pose = 0;
                break;
            case 2:
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,1,120,80);
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,2,120-16,80);
                pose = 0;
                break;
        }
        state = 1;
    }

    if (onFire)
    {
        if (state)
        {
        drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,0,120,80);
        }
        else
        {
        drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,0,120,80);
        }
    }
    else
    {
        delSprite(0);
    }

    if (iFrameCounter % 2 == 1)
    {
        delSprite(1);
    }
}
# 5 "main.c" 2
u16 TICK_COUNTER = 0;

void Handler(void)
{
    *(u16*)0x4000208 = 0x00;

    if ((*(volatile u16*)0x4000202 & 0x1) == 0x1)
    {
        checkGameState();


        if (game_state == 0 || game_state == 3 || game_state == 4)
        {

            if (TICK_COUNTER%30 == 0)
            {
                animatePressStart();
            }
            if(game_state == 0)
            {
                drawTitle();
            }
            if(game_state == 4)
            {
                drawDeath();
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,1,120,80);

            }
            if(game_state == 3)
            {
                drawEnd();
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,1,120,80);
                drawSprite(0 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1,2,120,80 -16);
            }
        }


        if (game_state == 1 || game_state == 2)
        {
            checkButton();
            fallCheck();
            enemy1Move(TICK_COUNTER);
            enemy2Move(TICK_COUNTER);
            enemy3Move(TICK_COUNTER);
            enemy4Move(TICK_COUNTER);
            relicMove();


            if (TICK_COUNTER%15 == 0)
            {
                damageCheck();
                animate();
                cooldownCheck();
                updateHP();
            }
        }

        TICK_COUNTER += 1;
    }

    if ((*(volatile u16*)0x4000202 & 0x8) == 0x8)
    {
        iFrameCountdown();
    }
    *(volatile u16*)0x4000202 = *(volatile u16*)0x4000202;
    *(u16*)0x4000208 = 0x01;
}





int main(void)
{

    *(unsigned short *) 0x4000000 = 0x40 | 0x2 | 0x1000 | 0x400;
# 93 "main.c"
    *(u16*)0x400000C |= 0x8880;

    fillBGPal();
    fillTileMem();
    fillScreenBlock(lvl1_map);


    fillPalette();
    fillSprites();


        *(u16*)0x4000208 = 0x0;
    (*(unsigned int*)0x3007FFC) = (int)&Handler;

    *(u16*)0x4000200 |= 0x8 | 0x10 | 0x1000 | 0x1;

    *(u16*)0x4000004 |= 0x0008;



    *(u16*)0x4000100 = 49510;
    *(u16*)0x4000102 = 0x0002 | 0x0040 | 0x0080;

    *(u16*)0x4000132 |= 0x4000 | 0x010 | 0x020 | 0x040 | 0x080 | 0x001 | 0x002 | 0x008 | 0x100;
        *(u16*)0x4000208 = 0x1;


    map_dx = 0;
    map_dy = 0;


    drawSprite(0 +1,1,120,80);

    while(1)
    {

    }
        return 0;
}
